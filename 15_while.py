# Мы с вами уже изучили цикл for
# Если вы его забыли, бегом искать нужный файлик и повторять

# Если вспомнили, продолжим :)
# Цикл for - не единственный вид цикла в программировании
# Сегодня мы изучим с вами новый цикл
# Он называется while (читается "вайл")
# В переводе while означает "пока"

# Давайте сразу к примеру
# Выведем на экран числа от 1 до 3
n = 1
while n <= 3:
    print(n)
    n = n + 1

# На первый взгляд эта конструкция не кажется понятной
# Давайте разбираться

# Цикл начинается с ключевого слова while.
# А после него идёт хорошо знакомое вам условие.
# Но ведь мы же не if пишем, в чём дело?

# Вспомните перевод слова while - "пока"
# Основная идея цикла в том, что команды, которые находятся внутри него,
# будут выполняться ПОКА условие возле слова while будет равно True

# Теперь давайте пройдём каждый шаг цикла, чтобы в этом убедиться
# До начала цикла мы завели переменную n.
# Именно её значения мы будем выводить на экран. Начать нам надо с числа 1, поэтому в n мы сразу положим 1

# Далее, мы объявили цикл
# while n <= 3:
# Тело цикла будет выполняться ПОКА число n будет меньше либо равно 3.
# Кстати, не забывайте о двоеточии после условия, оно обязательно :)

# Дальше начинается тело цикла: это все команды с отступом слева
# Первая команда выводит текущее значение переменной n на экран
# print(n)
# Вторая команда интереснее: она ИЗМЕНЯЕТ значение переменной n
# А именно, увеличивает число, которое хранится в n, на 1
# n = n + 1
# Как это вычисляется: программа берёт то, то В ДАННЫЙ МОМЕНТ лежит в переменной n
# и подставляет его в выражение. На первой итерации цикла (итерация = шаг) в n лежит 1
# Поэтому будет вычисляться выражение 1 + 1.
# Результат программа запишет снова в переменную n.
# Т.е. после того, как на первой итерации выполнятся все команды внутри цикла, в переменной n будет лежать число 2
# А в конце второй итерации будет лежать число 3

# Это легко проверить. Давайте немного изменим программу:
n = 1
while n <= 3:
    print('Начало итерации. n = ', n)
    print(n)
    n = n + 1
    print('Конец итерации. n = ', n)
    print('=====================================') # это просто разделитель, чтобы было проще смотреть, что вывелось на экран
    
# Итак, что мы видим
# Итерация 1: в начале n = 1, в конце n = 2
# Итерация 2: в начале n = 2, в конце n = 3
# Итерация 3: в начале n = 3, в конце n = 4

# Теперь давайте разберёмся, почему итераций ровно 3

# Когда итерация заканчивается (т.е. когда отработали все команды внутри цикла),
# цикл ПРОВЕРЯЕТ УСЛОВИЕ, которое написано после while
# Если его результат True, тело цикла выполняется ещё раз
# Если False, то цикл заканчивает свою работу

# Изменим программу ещё раз
n = 1
while n <= 3:
    print('Начало итерации. n = ', n)
    print(n)
    n = n + 1
    print('Конец итерации. n = ', n)
    print('n < 3 == ', n <= 3)
    print('=====================================')

# Теперь мы видим чему в конце каждой итерации равно условие
# На последней итерации n = 4, а это больше 3. Поэтому получаем False и завершаем вычисления.